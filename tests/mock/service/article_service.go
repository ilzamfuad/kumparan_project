// Code generated by MockGen. DO NOT EDIT.
// Source: service/article_service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	model "kumparan_project/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockArticleServiceInterface is a mock of ArticleServiceInterface interface.
type MockArticleServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockArticleServiceInterfaceMockRecorder
}

// MockArticleServiceInterfaceMockRecorder is the mock recorder for MockArticleServiceInterface.
type MockArticleServiceInterfaceMockRecorder struct {
	mock *MockArticleServiceInterface
}

// NewMockArticleServiceInterface creates a new mock instance.
func NewMockArticleServiceInterface(ctrl *gomock.Controller) *MockArticleServiceInterface {
	mock := &MockArticleServiceInterface{ctrl: ctrl}
	mock.recorder = &MockArticleServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArticleServiceInterface) EXPECT() *MockArticleServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateArticles mocks base method.
func (m *MockArticleServiceInterface) CreateArticles(arg0 context.Context, arg1 model.ArticleCreateParams) (*model.Article, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateArticles", arg0, arg1)
	ret0, _ := ret[0].(*model.Article)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateArticles indicates an expected call of CreateArticles.
func (mr *MockArticleServiceInterfaceMockRecorder) CreateArticles(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateArticles", reflect.TypeOf((*MockArticleServiceInterface)(nil).CreateArticles), arg0, arg1)
}

// GetArticles mocks base method.
func (m *MockArticleServiceInterface) GetArticles(arg0 context.Context, arg1 model.ArticleQueryParams) ([]model.Article, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetArticles", arg0, arg1)
	ret0, _ := ret[0].([]model.Article)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetArticles indicates an expected call of GetArticles.
func (mr *MockArticleServiceInterfaceMockRecorder) GetArticles(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetArticles", reflect.TypeOf((*MockArticleServiceInterface)(nil).GetArticles), arg0, arg1)
}
